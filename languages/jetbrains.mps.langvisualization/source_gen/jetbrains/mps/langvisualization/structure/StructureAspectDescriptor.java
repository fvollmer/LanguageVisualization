package jetbrains.mps.langvisualization.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptConceptReference = new ConceptDescriptorBuilder("jetbrains.mps.langvisualization.structure.ConceptReference", MetaIdFactory.conceptId(0x671fae57a26e4040L, 0xa1a3542a26fc8226L, 0x167a879f38a23f9aL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1619756133912821659L, "concept", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL), false)).references("concept").create();
  /*package*/ final ConceptDescriptor myConceptLanguageVisualization = new ConceptDescriptorBuilder("jetbrains.mps.langvisualization.structure.LanguageVisualization", MetaIdFactory.conceptId(0x671fae57a26e4040L, 0xa1a3542a26fc8226L, 0x5e94ed6ade77d7d0L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "com.mbeddr.mpsutil.plantuml.node.structure.IVisualizable", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xb4d28e197d2d47e9L, 0x943e3a41f97a0e52L, 0x2cc1a386e3d73948L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(6815333179373115353L, "showImported"), new ConceptDescriptorBuilder.Prop(8006359936660193228L, "showInterfaces"), new ConceptDescriptorBuilder.Prop(240207913782506995L, "excludeSubconcepts"), new ConceptDescriptorBuilder.Prop(240207913782510805L, "includeSubconcepts"), new ConceptDescriptorBuilder.Prop(8006359936661088151L, "packageMapping")).properties("showImported", "showInterfaces", "excludeSubconcepts", "includeSubconcepts", "packageMapping").childDescriptors(new ConceptDescriptorBuilder.Link(1555389317591054222L, "excludedConcepts", MetaIdFactory.conceptId(0x671fae57a26e4040L, 0xa1a3542a26fc8226L, 0x167a879f38a23f9aL), true, true, false), new ConceptDescriptorBuilder.Link(8006359936660213283L, "includedConcepts", MetaIdFactory.conceptId(0x671fae57a26e4040L, 0xa1a3542a26fc8226L, 0x167a879f38a23f9aL), true, true, false)).children(new String[]{"excludedConcepts", "includedConcepts"}, new boolean[]{true, true}).alias("language visualization node", "").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptConceptReference, myConceptLanguageVisualization);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0g, conceptFqName)) {
      case 0:
        return myConceptConceptReference;
      case 1:
        return myConceptLanguageVisualization;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0g = new String[]{"jetbrains.mps.langvisualization.structure.ConceptReference", "jetbrains.mps.langvisualization.structure.LanguageVisualization"};
}
