package jetbrains.mps.langvisualization.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import com.mbeddr.mpsutil.plantuml.node.behavior.VisGraph;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.internal.collections.runtime.Sequence;

public class LanguageVisualization_Behavior {
  public static void init(SNode thisNode) {
    SPropertyOperations.set(thisNode, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), SPropertyOperations.getString(SModelOperations.getModuleStub(SNodeOperations.getModel(thisNode)), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
  }
  public static String[] virtual_getCategories_3225038607917463882(SNode thisNode) {
    String[] categories = {"Language Concepts"};
    return categories;
  }
  public static void virtual_getVisualization_3225038607917463887(SNode thisNode, String category, VisGraph graph) {
    ConceptOverviewVisGraphBuilder builder = new ConceptOverviewVisGraphBuilder();
    builder.buildGraph(graph, thisNode);
    SModule module = SNodeOperations.getModel(thisNode).getModule();
    if (module instanceof Language) {
      Language language = (Language) module;
      Iterable<SNode> rootNodes = language.getStructureModelDescriptor().getRootNodes();
      for (SNode root : Sequence.fromIterable(rootNodes)) {
        {
          final SNode concept = root;
          if (SNodeOperations.isInstanceOf(concept, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"))) {
            builder.addConcept(concept);
          }
        }
      }
    }
    System.out.println(graph.toString());
  }
}
